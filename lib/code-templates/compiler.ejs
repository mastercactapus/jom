<%

var currentPointer = {};

var processVarIndex = 0;

function setCurrentPointer(objectName, pathspec) {
	currentPointer = {
		base: objectName,
		pathspec: pathspec,
		props: pathspec.split(".")
	};
}

function getProcessVar(){
	return "proc" + processVarIndex++;
}

function objOrArray(props, idx) {
	if (/^[0-9]+$/.test(props[idx])) {
		%>[]<%
	} else {
		%>{}<%
	}
}

function propString(props, idx) {
	var propName = props[idx];
	var propInt = parseInt(propName, 10);
	if (!/^[0-9]+$/.test(propName)) {
		%>["<%=propName%>"]<%
	} else {
		%>[<%=propName%>]<%
	}
}

function buildPropString(props, _idx) {
	var idx = typeof _idx === "undefined" ? props.length-1 : _idx;
	for (var i = 0; i <= idx; i++) {
		propString(props, i);
	}
}

function currentVal() {
	%><%=currentPointer.base%><%

	buildPropString(currentPointer.props);

}
function currentExists() {
	%>typeof <%=currentPointer.base%> !== "undefined"<%
		for (var i = 0; i < currentPointer.props.length; i++) {
			%> && typeof <%=currentPointer.base%><%buildPropString(currentPointer.props, i)%> !== "undefined"<%
		}
}

function printSetter(objectName, pathspec, value) {
	var props = pathspec.split(".");

	<% for (var i = 0; i < props.length-1; i++) { %>
		if (typeof <%=objectName%> <%buildPropString(props, i)%> !== "object") <%=objectName%><%buildPropString(props, i)%> = <%objOrArray(props,i+1)%>;
	<% } %>
	<%=objectName%><%buildPropString(props, props.length-1)%> = <%

	if (value) {
		%><%=value%>;<%
	}
}

function printLodash(varname, method, args) {
	if (!args.length) args = [args];

	%>lodash.<%=action.method%>(<%currentVal()%>,<%=args.join(",")%>)<%
}

function processActions(actions) {
	var thisVar;

	actions.forEach(function(action){

		if (action.type === "GET") {
			setCurrentPointer("srcObject", action.key);
			%>if (<%currentExists()%>) {
				<%
		}
		if (action.type === "LODASH") {
			if (thisVar) {
				
			}

			thisVar = getProcessVar();

			%>var <%=thisVar%> = <%printLodash(thisVar, action.method, action.args)%>;
			<%
		}
		if (action.type === "SET") {
			if (!thisVar) {
				printSetter("targetObject", action.targetKey);
				currentVal();
				%>;
				<%
			} else {
				printSetter("targetObject", action.targetKey, thisVar);
			}
			%>}
			<%
		}

		if (action.type === "TRANSFORM") {
			thisVar
			%>
		}

	});
}

processActions(actions);


%>


